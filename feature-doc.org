#+TITLE: FIDO WEBSITE FEATURE DOC
#+AUTHOR: Linus Arver
#+STARTUP: indent showall

* Introduction
This document describes the requirements for the Fido website, which will be used by company employees from various departments ("teams") to create written content ("blog posts"), and comment on them.
Although this is going to be an internal website to the company, it will nevertheless be designed as a public blogging platform for added flexibility should the company decide to use it in a public setting; because of this, the site must be secured.
* Definitions
** Personas
There will be three personas interacting with this site.
*** Administrators
This will be a limited list of people, and will be limited to Linus Arver and Dexter Arver.
*** Team administrators, or "TA"s
This will be just like regular administrators, but whose powers can only affect content generated by authors belonging to the same team.
The idea is that team administrators can act, in a way, as forum moderators.
Each team will have its own homepage at =fido/<team_name>=, and it will be the job of the TAs to maintain that site.
*** Authors
These will be the employees from the various teams.
Each team will have its own directory in the URI, so that a particular employee's blog site will look like =fido/<team_name>/<employee_username>=.
*** Public
These are the public people who may access the website, at the company's option later down the road.
** Access Control
This site needs 3 levels of permission.
*** Administrators
- CRUD (cread/read/update/delete) access control (choose administrators)
- CRUD all author-generated content (posts and media files inside them).
- CRUD comments
- RUD flags
- CRUD flag powers? (in the event an author goes rogue and starts flagging everything in sight, although even in such an instance, it is unlikely that that author will regain their flagging powers after such an incident)
*** Team administrators
- Just like administrators, but actions are limited to content generated by their own team members.
- create flags (against OTHER team authors)
- CRUD team posts
- CRUD team media
- CRUD team comments
- NOTE: TAs must only be TAs and should not have regular user accounts; this is because if a person can wear 2 hats as a team author and also as a team administrator, it is possible that they can, e.g., write posts, see a comment on a post they don't like, and then delete that comment all on their own without going through the flagging system designed to create awareness to 3rd parties about offensive content
*** Authors
- CRUD own posts
- CRUD own media (audio/visual content inside posts)
- CRUD own comments
- create flags (flag is applied to post or comment that is deemed inappropriate/offensive)
- read other posts
- read other media
- read other comments
- search posts
*** Public
- read posts
- read media
- read comments
- read flags (if an item has been flagged, it will be censored against the public)
- search posts
* Features
** Email Notification Triggers
*** Administrators
- author signup finalization (when an unknown user requests to sign up to become a user, an email is generated to admins, and any admin can approve an author account request)
- author deletion requests (an employee may request to have his account deleted)
- flagged items (posts/comments) by authors
*** Authors
- new comments to own posts
- edits to comments to own posts
- flagged own item (someone flags an item belonging to author X; author X is notified by email)
** SPAM protection
- posts/comments: cannot contain offensive language --- this is a simple grep operation and serves as an automatic layer of protection (this layer is augmented with the manual flagging system)
- user creation (author signup) will be protected against via recaptcha
** Pages
*** Site top-level
**** News
- URI: =fido/news=
- The administrator/TA will have a blog-like interface for publishing news posts (after logging in as an administrator at =fido/admin=, or TA as =fido/<team_name>/admin=). News posts are just like blog posts, except that no one can flag them (all administrators are trusted individuals).
**** Sign up
- Would-be authors can sign up at this page.
- The name 'admin' cannot be used as it is part of the routes for administrator logins.
**** Policy
- Text-heavy FAQ-like page that describes all legal matter pertaining to the site (rights, offensive content, etc.).
- Has a table of contents.
**** FAQ
- Text-heavy page describing an overview of how to use the site.
- Has a table of contents.
*** Admin
**** CRUD News
- Admins can edit news items here.
**** CRUD Access control
- Admins can create/assign new administrator accounts, as well as delete existing ones.
**** CRUD Comments
- Admins can comment on posts themselves as administrators (e.g., "Congratulations, this article has been featured on the front page!"), or modify comments (e.g., as a response to a flag).
**** CRUD Policy
- Admins can edit the Policy page here.
**** CRUD FAQ
- Admins can edit the FAQ page here.
**** Flagged Items
- Should display flagged items that need attention for removal.
  - When an item is removed, its contents should be emailed back to the content creator and say why it was removed.
*** Author interface
**** Create/Update/Delete Post
- Authors can create/update/delete posts from a blog-like interface.
  - A post can have multimedia content embedded in it; all such content will be uploaded first to a per-user "media" folder.
**** Single post view
- Anyone can view the post on its own page.
- Commenting on the post happens here.
**** List posts view
- This is the landing page of a particular author, and each post will be auto-shortened to make it easier to see multiple posts in a shorter amount of screen space.
- The posts will be listed with the newest items on top (reverse chronological order).
**** Profile
- This is the profile page of the author, and includes personal information that the author chooses to disclose.
*** Analytics
- All non-admin pages should be integrated with Google Analytics.
*** Authentication
- A simple login/signup page, with legalese about the site's POLICY and also 3rd party stuff and privacy rights
* Application Model (Schema)
** Database Tables/Fields
- NOTE: All up to this point, we spoke of "authors" as the regular content creators. However, we will follow convention and use the name "user" to mean "author" in the web app internals.
*** Post
- =TITLE: TEXT=
- =AUTHOR: USER_ID (FK)=
- =DATE: TIMESTAMP=
  - This is the date that the post was published. It may be desirable to add a =DATE_EDITED= field in the future to denote when a post was last edited.
- =BODY: TEXT=
- =HIDDEN: BOOLEAN (default FALSE)=
  - Used to hide flagged posts by administrators, until OK'ed by a higher-up about deleting the post entirely.
*** Media
- =FILE_NAME: VARCHAR=
- =FILE_SIZE: INTEGER (in KiB)=
*** Comment
- =DATE: TIMESTAMP=
- =BODY: TEXT=
- =USER_ID: FK=
  - The ID of the author of this comment.
- =POST_ID: FK=
  - The ID of the post that this comment is responding to.
*** Like
- =FILE_NAME: VARCHAR=
- =FILE_SIZE: INTEGER (in KiB)=
*** News
- =TITLE: TEXT=
- =BODY: TEXT=
- =USER_ID: FK=
*** Policy
- =BODY: TEXT=
*** FAQ
- =BODY: TEXT=
*** Role
- =DESCRIPTION: (TEXT: "ADMIN", "USER")=
*** Access control
- =USER_ID: FK=
- =ROLE_ID: FK=
*** Department
- =NAME: VARCHAR=
*** User
- This table contains all users of the system --- administrators, team administrators, and authors (users); the different classes are distinguished by the =Access control= table.
- =NAME: VARCHAR=
- =EMAIL: VARCHAR=
- =PASSWORD: VARCHAR=
- =JOB_DEPARTMENT: FK=
  - This is the "team" that the employee belongs to.
- =JOB_TITLE: VARCHAR=
- =PHONE: VARCHAR=
  - Use validation logic to guard against nonsense phone numbers.
- =ABOUT_ME: TEXT=
  - This is a self-written "about me" blurb in the user's own words.
- =EMAIL_NOTIFY_X: BOOLEAN=
- =EMAIL_NOTIFY_Y: BOOLEAN=
- =EMAIL_NOTIFY_Z: BOOLEAN=
  - Whether the system is allowed to email the user for purpose X, Y, or Z.
** Searched Database Tables/Fields
*** Post
- =TITLE=
- =BODY=
*** Comment
- =BODY=
*** User
- =NAME=
- =EMAIL=
